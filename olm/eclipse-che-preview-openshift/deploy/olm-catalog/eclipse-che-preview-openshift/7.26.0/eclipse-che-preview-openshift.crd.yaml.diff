--- /home/runner/work/che-operator/che-operator/olm/eclipse-che-preview-openshift/deploy/olm-catalog/eclipse-che-preview-openshift/7.25.2/eclipse-che-preview-openshift.crd.yaml	2021-02-10 16:08:25.529203981 +0000
+++ /home/runner/work/che-operator/che-operator/olm/eclipse-che-preview-openshift/deploy/olm-catalog/eclipse-che-preview-openshift/7.26.0/eclipse-che-preview-openshift.crd.yaml	2021-02-10 17:05:30.459397312 +0000
@@ -42,38 +42,38 @@
           type: object
         spec:
           description: Desired configuration of the Che installation. Based on these
-            settings, the operator automatically creates and maintains several config
-            maps that will contain the appropriate environment variables the various
-            components of the Che installation. These generated config maps should
-            NOT be updated manually.
+            settings, the  Operator automatically creates and maintains several ConfigMaps
+            that will contain the appropriate environment variables the various components
+            of the Che installation. These generated ConfigMaps must NOT be updated
+            manually.
           properties:
             auth:
               description: Configuration settings related to the Authentication used
                 by the Che installation.
               properties:
                 externalIdentityProvider:
-                  description: 'Instructs the operator on whether or not to deploy
-                    a dedicated Identity Provider (Keycloak or RH SSO instance). By
-                    default a dedicated Identity Provider server is deployed as part
-                    of the Che installation. But if `externalIdentityProvider` is
-                    `true`, then no dedicated identity provider will be deployed by
-                    the operator and you might need to provide details about the external
-                    identity provider you want to use. See also all the other fields
-                    starting with: `identityProvider`.'
+                  description: 'Instructs the Operator on whether to deploy a dedicated
+                    Identity Provider (Keycloak or RH-SSO instance). By default, a
+                    dedicated Identity Provider server is deployed as part of the
+                    Che installation. When `externalIdentityProvider` is `true`, no
+                    dedicated identity provider will be deployed by the Operator and
+                    you will need to provide details about the external identity provider
+                    you are about to use. See also all the other fields starting with:
+                    `identityProvider`.'
                   type: boolean
                 identityProviderAdminUserName:
-                  description: Overrides the name of the Identity Provider admin user.
-                    Defaults to `admin`.
+                  description: Overrides the name of the Identity Provider administrator
+                    user. Defaults to `admin`.
                   type: string
                 identityProviderClientId:
-                  description: Name of a Identity provider (Keycloak / RH SSO) `client-id`
-                    that should be used for Che. This is useful to override it ONLY
-                    if you use an external Identity Provider (see the `externalIdentityProvider`
-                    field). If omitted or left blank, it will be set to the value
-                    of the `flavour` field suffixed with `-public`.
+                  description: Name of a Identity provider, Keycloak or RH-SSO, `client-id`
+                    that is used for Che. This is useful to override it ONLY if you
+                    use an external Identity Provider. See the `externalIdentityProvider`
+                    field. When omitted or left blank, it is set to the value of the
+                    `flavour` field suffixed with `-public`.
                   type: string
                 identityProviderContainerResources:
-                  description: Identity provider container custom settings
+                  description: Identity provider container custom settings.
                   properties:
                     limits:
                       description: Limits describes the maximum amount of compute
@@ -102,79 +102,81 @@
                   type: object
                 identityProviderImage:
                   description: Overrides the container image used in the Identity
-                    Provider (Keycloak / RH SSO) deployment. This includes the image
-                    tag. Omit it or leave it empty to use the defaut container image
-                    provided by the operator.
+                    Provider, Keycloak or RH-SSO, deployment. This includes the image
+                    tag. Omit it or leave it empty to use the default container image
+                    provided by the Operator.
                   type: string
                 identityProviderImagePullPolicy:
                   description: Overrides the image pull policy used in the Identity
-                    Provider (Keycloak / RH SSO) deployment. Default value is `Always`
+                    Provider, Keycloak or RH-SSO, deployment. Default value is `Always`
                     for `nightly` or `latest` images, and `IfNotPresent` in other
                     cases.
                   type: string
                 identityProviderIngress:
-                  description: Ingress custom settings
+                  description: Ingress custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 identityProviderPassword:
-                  description: Overrides the password of Keycloak admin user. This
-                    is useful to override it ONLY if you use an external Identity
-                    Provider (see the `externalIdentityProvider` field). If omitted
-                    or left blank, it will be set to an auto-generated password.
+                  description: Overrides the password of Keycloak administrator user.
+                    This is useful to override it ONLY if you use an external Identity
+                    Provider. See the `externalIdentityProvider` field. When omitted
+                    or left blank, it is set to an auto-generated password.
                   type: string
                 identityProviderPostgresPassword:
-                  description: Password for The Identity Provider (Keycloak / RH SSO)
+                  description: Password for a Identity Provider, Keycloak or RH-SSO,
                     to connect to the database. This is useful to override it ONLY
-                    if you use an external Identity Provider (see the `externalIdentityProvider`
-                    field). If omitted or left blank, it will be set to an auto-generated
+                    if you use an external Identity Provider. See the `externalIdentityProvider`
+                    field. When omitted or left blank, it is set to an auto-generated
                     password.
                   type: string
                 identityProviderPostgresSecret:
-                  description: 'The secret that contains `password` for The Identity
-                    Provider (Keycloak / RH SSO) to connect to the database. If the
-                    secret is defined then `identityProviderPostgresPassword` will
-                    be ignored. If the value is omitted or left blank then there are
-                    two scenarios: 1. `identityProviderPostgresPassword` is defined,
-                    then it will be used to connect to the database. 2. `identityProviderPostgresPassword`
-                    is not defined, then a new secret with the name `che-identity-postgres-secret`
-                    will be created with an auto-generated value for `password`.'
+                  description: 'The secret that contains `password` for the Identity
+                    Provider, Keycloak or RH-SSO, to connect to the database. When
+                    the secret is defined, the `identityProviderPostgresPassword`
+                    is ignored. When the value is omitted or left blank, the one of
+                    following scenarios applies: 1. `identityProviderPostgresPassword`
+                    is defined, then it will be used to connect to the database. 2.
+                    `identityProviderPostgresPassword` is not defined, then a new
+                    secret with the name `che-identity-postgres-secret` will be created
+                    with an auto-generated value for `password`.'
                   type: string
                 identityProviderRealm:
-                  description: Name of a Identity provider (Keycloak / RH SSO) realm
-                    that should be used for Che. This is useful to override it ONLY
-                    if you use an external Identity Provider (see the `externalIdentityProvider`
-                    field). If omitted or left blank, it will be set to the value
-                    of the `flavour` field.
+                  description: Name of a Identity provider, Keycloak or RH-SSO, realm
+                    that is used for Che. This is useful to override it ONLY if you
+                    use an external Identity Provider. See the `externalIdentityProvider`
+                    field. When omitted or left blank, it is set to the value of the
+                    `flavour` field.
                   type: string
                 identityProviderRoute:
-                  description: Route custom settings
+                  description: Route custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 identityProviderSecret:
                   description: 'The secret that contains `user` and `password` for
-                    Identity Provider. If the secret is defined then `identityProviderAdminUserName`
-                    and `identityProviderPassword` are ignored. If the value is omitted
-                    or left blank then there are two scenarios: 1. `identityProviderAdminUserName`
-                    and `identityProviderPassword` are defined, then they will be
-                    used. 2. `identityProviderAdminUserName` or `identityProviderPassword`
-                    are not defined, then a new secret with the name `che-identity-secret`
-                    will be created with default value `admin` for `user` and with
-                    an auto-generated value for `password`.'
+                    Identity Provider. When the secret is defined, the `identityProviderAdminUserName`
+                    and `identityProviderPassword` are ignored. When the value is
+                    omitted or left blank, the one of following scenarios applies:
+                    1. `identityProviderAdminUserName` and `identityProviderPassword`
+                    are defined, then they will be used. 2. `identityProviderAdminUserName`
+                    or `identityProviderPassword` are not defined, then a new secret
+                    with the name `che-identity-secret` will be created with default
+                    value `admin` for `user` and with an auto-generated value for
+                    `password`.'
                   type: string
                 identityProviderURL:
                   description: Public URL of the Identity Provider server (Keycloak
-                    / RH SSO server). You should set it ONLY if you use an external
-                    Identity Provider (see the `externalIdentityProvider` field).
-                    By default this will be automatically calculated and set by the
-                    operator.
+                    / RH-SSO server). Set this ONLY when a use of an external Identity
+                    Provider is needed. See the `externalIdentityProvider` field.
+                    By default, this will be automatically calculated and set by the
+                    Operator.
                   type: string
                 oAuthClientName:
                   description: Name of the OpenShift `OAuthClient` resource used to
@@ -188,15 +190,12 @@
                   type: string
                 openShiftoAuth:
                   description: 'Enables the integration of the identity provider (Keycloak
-                    / RHSSO) with OpenShift OAuth. Empty value on the OpenShift platform
-                    by default. If user changes this empty value to true/false, then
-                    che-operator respect this value. Otherwise che-operator tries
-                    to auto detect if Openshift oAuth can be enabled and change empty
-                    value, correspondly to auto-detection result. This property allows
-                    users to directly login with their Openshift user through the
-                    Openshift login, and have their workspaces created under personal
-                    OpenShift namespaces. WARNING: the `kubeadmin` user is NOT supported,
-                    and logging through it will NOT allow accessing the Che Dashboard.'
+                    / RHSSO) with OpenShift OAuth. Empty value on OpenShift by default.
+                    This will allow users to directly login with their OpenShift user
+                    through the OpenShift login, and have their workspaces created
+                    under personal OpenShift namespaces. WARNING: the `kubeadmin`
+                    user is NOT supported, and logging through it will NOT allow accessing
+                    the Che Dashboard.'
                   type: boolean
                 updateAdminPassword:
                   description: Forces the default `admin` Che user to update password
@@ -208,7 +207,7 @@
                 the Che installation.
               properties:
                 chePostgresContainerResources:
-                  description: Postgres container custom settings
+                  description: PostgreSQL container custom settings
                   properties:
                     limits:
                       description: Limits describes the maximum amount of compute
@@ -236,57 +235,56 @@
                       type: object
                   type: object
                 chePostgresDb:
-                  description: Postgres database name that the Che server uses to
+                  description: PostgreSQL database name that the Che server uses to
                     connect to the DB. Defaults to `dbche`.
                   type: string
                 chePostgresHostName:
-                  description: Postgres Database hostname that the Che server uses
-                    to connect to. Defaults to postgres. This value should be overridden
-                    ONLY when using an external database (see field `externalDb`).
-                    In the default case it will be automatically set by the operator.
+                  description: PostgreSQL Database host name that the Che server uses
+                    to connect to. Defaults to postgres. Override this value ONLY
+                    when using an external database. See field `externalDb`. In the
+                    default case it will be automatically set by the Operator.
                   type: string
                 chePostgresPassword:
-                  description: Postgres password that the Che server should use to
-                    connect to the DB. If omitted or left blank, it will be set to
-                    an auto-generated value.
+                  description: PostgreSQL password that the Che server uses to connect
+                    to the DB. When omitted or left blank, it will be set to an automatically
+                    generated value.
                   type: string
                 chePostgresPort:
-                  description: Postgres Database port that the Che server uses to
-                    connect to. Defaults to 5432. This value should be overridden
-                    ONLY when using an external database (see field `externalDb`).
-                    In the default case it will be automatically set by the operator.
+                  description: PostgreSQL Database port that the Che server uses to
+                    connect to. Defaults to 5432. Override this value ONLY when using
+                    an external database. See field `externalDb`. In the default case
+                    it will be automatically set by the Operator.
                   type: string
                 chePostgresSecret:
-                  description: 'The secret that contains Postgres `user` and `password`
-                    that the Che server should use to connect to the DB. If the secret
-                    is defined then `chePostgresUser` and `chePostgresPassword` are
-                    ignored. If the value is omitted or left blank then there are
-                    two scenarios: 1. `chePostgresUser` and `chePostgresPassword`
+                  description: 'The secret that contains PosgreSQL`user` and `password`
+                    that the Che server uses to connect to the DB. When the secret
+                    is defined, the `chePostgresUser` and `chePostgresPassword` are
+                    ignored. When the value is omitted or left blank, the one of following
+                    scenarios applies: 1. `chePostgresUser` and `chePostgresPassword`
                     are defined, then they will be used to connect to the DB. 2. `chePostgresUser`
                     or `chePostgresPassword` are not defined, then a new secret with
                     the name `che-postgres-secret` will be created with default value
                     of `pgche` for `user` and with an auto-generated value for `password`.'
                   type: string
                 chePostgresUser:
-                  description: Postgres user that the Che server should use to connect
+                  description: PostgreSQL user that the Che server uses to connect
                     to the DB. Defaults to `pgche`.
                   type: string
                 externalDb:
-                  description: 'Instructs the operator on whether or not to deploy
-                    a dedicated database. By default a dedicated Postgres database
-                    is deployed as part of the Che installation. But if `externalDb`
-                    is `true`, then no dedicated database will be deployed by the
-                    operator and you might need to provide connection details to the
-                    external DB you want to use. See also all the fields starting
-                    with: `chePostgres`.'
+                  description: 'Instructs the Operator on whether to deploy a dedicated
+                    database. By default, a dedicated PostgreSQL database is deployed
+                    as part of the Che installation. When `externalDb` is `true`,
+                    no dedicated database will be deployed by the Operator and you
+                    will need to provide connection details to the external DB you
+                    are about to use. See also all the fields starting with: `chePostgres`.'
                   type: boolean
                 postgresImage:
-                  description: Overrides the container image used in the Postgres
+                  description: Overrides the container image used in the PosgreSQL
                     database deployment. This includes the image tag. Omit it or leave
-                    it empty to use the defaut container image provided by the operator.
+                    it empty to use the default container image provided by the Operator.
                   type: string
                 postgresImagePullPolicy:
-                  description: Overrides the image pull policy used in the Postgres
+                  description: Overrides the image pull policy used in the PosgreSQL
                     database deployment. Default value is `Always` for `nightly` or
                     `latest` images, and `IfNotPresent` in other cases.
                   type: string
@@ -299,10 +297,10 @@
                     \ Image Puller Operator. If true and no spec is provided, it will\
                     \ create a default KubernetesImagePuller object to be managed\
                     \ by the Operator. If false, the KubernetesImagePuller object\
-                    \ will be deleted, and the operator will be uninstalled, regardless\
-                    \ of whether or not a spec is provided. \n Please note that while\
-                    \ this operator and its behavior is community-supported, its payload\
-                    \ may be commercially-supported if you use it for pulling commercially-supported\
+                    \ will be deleted, and the Operator will be uninstalled, regardless\
+                    \ of whether a spec is provided. \n Note that while this the Operator\
+                    \ and its behavior is community-supported, its payload may be\
+                    \ commercially-supported if you use it for pulling commercially-supported\
                     \ images."
                   type: boolean
                 spec:
@@ -336,49 +334,46 @@
                 on upstream Kubernetes.
               properties:
                 ingressClass:
-                  description: 'Ingress class that will define the which controler
+                  description: 'Ingress class that will define the which controller
                     will manage ingresses. Defaults to `nginx`. NB: This drives the
-                    `is kubernetes.io/ingress.class` annotation on Che-related ingresses.'
+                    `kubernetes.io/ingress.class` annotation on Che-related ingresses.'
                   type: string
                 ingressDomain:
                   description: 'Global ingress domain for a K8S cluster. This MUST
                     be explicitly specified: there are no defaults.'
                   type: string
                 ingressStrategy:
-                  description: Strategy for ingress creation. This can be `multi-host`
+                  description: 'Strategy for ingress creation. Options are: `multi-host`
                     (host is explicitly provided in ingress), `single-host` (host
-                    is provided, path-based rules) and `default-host.*`(no host is
-                    provided, path-based rules). Defaults to `"multi-host` Deprecated
-                    in favor of "serverExposureStrategy" in the "server" section,
-                    which defines this regardless of the cluster type. If both are
-                    defined, `serverExposureStrategy` takes precedence.
+                    is provided, path-based rules) and `default-host` (no host is
+                    provided, path-based rules). Defaults to `multi-host` Deprecated
+                    in favor of `serverExposureStrategy` in the `server` section,
+                    which defines this regardless of the cluster type. When both are
+                    defined, the `serverExposureStrategy` option takes precedence.'
                   type: string
                 securityContextFsGroup:
-                  description: FSGroup the Che pod and Workspace pods containers should
-                    run in. Defaults to `1724`.
+                  description: The FSGroup in which the Che Pod and workspace Pods
+                    containers runs in. Default value is `1724`.
                   type: string
                 securityContextRunAsUser:
-                  description: ID of the user the Che pod and Workspace pods containers
-                    should run as. Default to `1724`.
+                  description: ID of the user the Che Pod and workspace Pods containers
+                    run as. Default value is `1724`.
                   type: string
                 singleHostExposureType:
-                  description: When the serverExposureStrategy is set to "single-host",
+                  description: When the serverExposureStrategy is set to `single-host`,
                     the way the server, registries and workspaces are exposed is further
-                    configured by this property. The possible values are "native"
-                    (which means that the server and workspaces are exposed using
-                    ingresses on K8s) or "gateway" where the server and workspaces
-                    are exposed using a custom gateway based on Traefik. All the endpoints
-                    whether backed by the ingress or gateway "route" always point
-                    to the subpaths on the same domain. Defaults to "native".
+                    configured by this property. The possible values are `native`,
+                    which means that the server and workspaces are exposed using ingresses
+                    on K8s or `gateway` where the server and workspaces are exposed
+                    using a custom gateway based on Traefik. All the endpoints whether
+                    backed by the ingress or gateway `route` always point to the subpaths
+                    on the same domain. Defaults to `native`.
                   type: string
                 tlsSecretName:
-                  description: Name of a secret that is used to set ingress TLS termination
-                    if TLS is enabled. If the specified secret does not exist, a self-signed
-                    certificate will be created. If the value is empty or omitted,
-                    the default ingress controller certificate will be used. See also
-                    the `tlsSupport` field. Note, when switching to the default ingress
-                    controller certificate, `self-signed-certificate` secret should
-                    be deleted manually.
+                  description: Name of a secret that will be used to setup ingress
+                    TLS termination when TLS is enabled. When the field is empty string,
+                    the default cluster certificate will be used. See also the `tlsSupport`
+                    field.
                   type: string
               type: object
             metrics:
@@ -386,7 +381,8 @@
                 used by the Che installation.
               properties:
                 enable:
-                  description: Enables `metrics` Che server endpoint. Default to `true`.
+                  description: Enables `metrics` the Che server endpoint. Default
+                    to `true`.
                   type: boolean
               type: object
             server:
@@ -394,29 +390,29 @@
                 and the plugin and devfile registries
               properties:
                 airGapContainerRegistryHostname:
-                  description: Optional hostname (or url) to an alternate container
+                  description: Optional host name, or URL, to an alternate container
                     registry to pull images from. This value overrides the container
-                    registry hostname defined in all the default container images
+                    registry host name defined in all the default container images
                     involved in a Che deployment. This is particularly useful to install
-                    Che in an air-gapped environment.
+                    Che in a restricted environment.
                   type: string
                 airGapContainerRegistryOrganization:
                   description: Optional repository name of an alternate container
                     registry to pull images from. This value overrides the container
                     registry organization defined in all the default container images
                     involved in a Che deployment. This is particularly useful to install
-                    Che in an air-gapped environment.
+                    Eclipse Che in a restricted environment.
                   type: string
                 allowUserDefinedWorkspaceNamespaces:
-                  description: Defines if a user is able to specify Kubernetes namespace
-                    (or OpenShift project) different from the default. It's NOT RECOMMENDED
-                    to configured true without OAuth configured. This property is
-                    also used by the OpenShift infra.
+                  description: Defines that a user is allowed to specify a Kubernetes
+                    namespace, or an OpenShift project, which differs from the default.
+                    It's NOT RECOMMENDED to set to `true` without OpenShift OAuth
+                    configured. The OpenShift infrastructure also uses this property.
                   type: boolean
                 cheClusterRoles:
-                  description: Comma-separated list of ClusterRoles that will be assigned
-                    to che ServiceAccount. Be aware that che-operator has to already
-                    have all permissions in these ClusterRoles to be able to grant
+                  description: A comma-separated list of ClusterRoles that will be
+                    assigned to Che ServiceAccount. Be aware that the Che Operator
+                    has to already have all permissions in these ClusterRoles to grant
                     them.
                   type: string
                 cheDebug:
@@ -424,24 +420,25 @@
                     `false`.
                   type: string
                 cheFlavor:
-                  description: Flavor of the installation. This is either `che` for
-                    upstream Che installations, or `codeready` for CodeReady Workspaces
-                    installation. In most cases the default value should not be overridden.
+                  description: Specifies a variation of the installation. The options
+                    are `che` for upstream Che installations, or `codeready` for CodeReady
+                    Workspaces installation. If not necessary, do not override the
+                    default value.
                   type: string
                 cheHost:
-                  description: Public hostname of the installed Che server. If value
-                    is omitted then it will be automatically set by the operator.
-                    (see the `cheHostTLSSecret` field).
+                  description: Public host name of the installed Che server. When
+                    value is omitted, the value it will be automatically set by the
+                    Operator. See the `cheHostTLSSecret` field.
                   type: string
                 cheHostTLSSecret:
                   description: Name of a secret containing certificates to secure
-                    ingress/route for the custom hostname of the installed Che server.
-                    (see the `cheHost` field).
+                    ingress or route for the custom host name of the installed Che
+                    server. See the `cheHost` field.
                   type: string
                 cheImage:
                   description: Overrides the container image used in Che deployment.
                     This does NOT include the container image tag. Omit it or leave
-                    it empty to use the defaut container image provided by the operator.
+                    it empty to use the default container image provided by the Operator.
                   type: string
                 cheImagePullPolicy:
                   description: Overrides the image pull policy used in Che deployment.
@@ -450,27 +447,27 @@
                   type: string
                 cheImageTag:
                   description: Overrides the tag of the container image used in Che
-                    deployment. Omit it or leave it empty to use the defaut image
-                    tag provided by the operator.
+                    deployment. Omit it or leave it empty to use the default image
+                    tag provided by the Operator.
                   type: string
                 cheLogLevel:
                   description: 'Log level for the Che server: `INFO` or `DEBUG`. Defaults
                     to `INFO`.'
                   type: string
                 cheServerIngress:
-                  description: Che server ingress custom settings
+                  description: The Che server ingress custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 cheServerRoute:
-                  description: Che server route custom settings
+                  description: The Che server route custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 cheWorkspaceClusterRole:
@@ -481,252 +478,247 @@
                   additionalProperties:
                     type: string
                   description: Map of additional environment variables that will be
-                    applied in the generated `che` config map to be used by the Che
+                    applied in the generated `che` configMap to be used by the Che
                     server, in addition to the values already generated from other
-                    fields of the `CheCluster` custom resource (CR). If `customCheProperties`
+                    fields of the `CheCluster` custom resource (CR). When `customCheProperties`
                     contains a property that would be normally generated in `che`
-                    config map from other CR fields, then the value defined in the
-                    `customCheProperties` will be used instead.
+                    configMap from other CR fields, the value defined in the `customCheProperties`
+                    is used instead.
                   type: object
                 devfileRegistryCpuLimit:
-                  description: Overrides the cpu limit used in the Devfile registry
+                  description: Overrides the CPU limit used in the devfile registry
                     deployment. In cores. (500m = .5 cores). Default to 500m.
                   type: string
                 devfileRegistryCpuRequest:
-                  description: Overrides the cpu request used in the Devfile registry
+                  description: Overrides the CPU request used in the devfile registry
                     deployment. In cores. (500m = .5 cores). Default to 100m.
                   type: string
                 devfileRegistryImage:
-                  description: Overrides the container image used in the Devfile registry
+                  description: Overrides the container image used in the devfile registry
                     deployment. This includes the image tag. Omit it or leave it empty
-                    to use the defaut container image provided by the operator.
+                    to use the default container image provided by the Operator.
                   type: string
                 devfileRegistryIngress:
-                  description: Devfile registry ingress custom settings
+                  description: The devfile registry ingress custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 devfileRegistryMemoryLimit:
-                  description: Overrides the memory limit used in the Devfile registry
-                    deployment. In bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024).
-                    Defaults to 256Mi.
+                  description: Overrides the memory limit used in the devfile registry
+                    deployment. Defaults to 256Mi.
                   type: string
                 devfileRegistryMemoryRequest:
-                  description: Overrides the memory request used in the Devfile registry
-                    deployment In bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024).
-                    Defaults to 32Mi.
+                  description: Overrides the memory request used in the devfile registry
+                    deployment. Defaults to 16Mi.
                   type: string
                 devfileRegistryPullPolicy:
-                  description: Overrides the image pull policy used in the Devfile
+                  description: Overrides the image pull policy used in the devfile
                     registry deployment. Default value is `Always` for `nightly` or
                     `latest` images, and `IfNotPresent` in other cases.
                   type: string
                 devfileRegistryRoute:
-                  description: Devfile registry route custom settings
+                  description: The devfile registry route custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 devfileRegistryUrl:
-                  description: Public URL of the Devfile registry, that serves sample,
-                    ready-to-use devfiles. You should set it ONLY if you use an external
-                    devfile registry (see the `externalDevfileRegistry` field). By
-                    default this will be automatically calculated by the operator.
+                  description: Public URL of the devfile registry, that serves sample,
+                    ready-to-use devfiles. Set this ONLY when a use of an external
+                    devfile registry is needed. See the `externalDevfileRegistry`
+                    field. By default, this will be automatically calculated by the
+                    Operator.
                   type: string
                 externalDevfileRegistry:
-                  description: Instructs the operator on whether or not to deploy
-                    a dedicated Devfile registry server. By default a dedicated devfile
-                    registry server is started. But if `externalDevfileRegistry` is
-                    `true`, then no such dedicated server will be started by the operator
-                    and you will have to manually set the `devfileRegistryUrl` field
+                  description: Instructs the Operator on whether to deploy a dedicated
+                    devfile registry server. By default, a dedicated devfile registry
+                    server is started. When `externalDevfileRegistry` is `true`, no
+                    such dedicated server will be started by the Operator and you
+                    will have to manually set the `devfileRegistryUrl` field
                   type: boolean
                 externalPluginRegistry:
-                  description: Instructs the operator on whether or not to deploy
-                    a dedicated Plugin registry server. By default a dedicated plugin
-                    registry server is started. But if `externalPluginRegistry` is
-                    `true`, then no such dedicated server will be started by the operator
-                    and you will have to manually set the `pluginRegistryUrl` field.
+                  description: Instructs the Operator on whether to deploy a dedicated
+                    plugin registry server. By default, a dedicated plugin registry
+                    server is started. When `externalPluginRegistry` is `true`, no
+                    such dedicated server will be started by the Operator and you
+                    will have to manually set the `pluginRegistryUrl` field.
                   type: boolean
                 gitSelfSignedCert:
-                  description: If enabled, then the certificate from `che-git-self-signed-cert`
-                    config map will be propagated to the Che components and provide
+                  description: When enabled, the certificate from `che-git-self-signed-cert`
+                    configMap will be propagated to the Che components and provide
                     particular configuration for Git.
                   type: boolean
                 nonProxyHosts:
-                  description: 'List of hosts that should not use the configured proxy.
-                    So specify wild card domain use the following form `.<DOMAIN>`
-                    and `|` as delimiter, eg: `localhost|.my.host.com|123.42.12.32`
+                  description: 'List of hosts that will be reached directly, bypassing
+                    the proxy. Specify wild card domain use the following form `.<DOMAIN>`
+                    and `|` as delimiter, for example: `localhost|.my.host.com|123.42.12.32`
                     Only use when configuring a proxy is required. Operator respects
                     OpenShift cluster wide proxy configuration and no additional configuration
                     is required, but defining `nonProxyHosts` in a custom resource
                     leads to merging non proxy hosts lists from the cluster proxy
-                    configuration and ones defined in the custom resources. (see the
-                    doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html)
-                    (see also the `proxyURL` fields).'
+                    configuration and ones defined in the custom resources. See the
+                    doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html).
+                    See also the `proxyURL` fields.'
                   type: string
                 pluginRegistryCpuLimit:
-                  description: Overrides the cpu limit used in the Plugin registry
+                  description: Overrides the CPU limit used in the plugin registry
                     deployment. In cores. (500m = .5 cores). Default to 500m.
                   type: string
                 pluginRegistryCpuRequest:
-                  description: Overrides the cpu request used in the Plugin registry
+                  description: Overrides the CPU request used in the plugin registry
                     deployment. In cores. (500m = .5 cores). Default to 100m.
                   type: string
                 pluginRegistryImage:
-                  description: Overrides the container image used in the Plugin registry
+                  description: Overrides the container image used in the plugin registry
                     deployment. This includes the image tag. Omit it or leave it empty
-                    to use the default container image provided by the operator.
+                    to use the default container image provided by the Operator.
                   type: string
                 pluginRegistryIngress:
-                  description: Plugin registry ingress custom settings
+                  description: Plugin registry ingress custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 pluginRegistryMemoryLimit:
-                  description: Overrides the memory limit used in the Plugin registry
-                    deployment. In bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024).
-                    Defaults to 256Mi.
+                  description: Overrides the memory limit used in the plugin registry
+                    deployment. Defaults to 256Mi.
                   type: string
                 pluginRegistryMemoryRequest:
-                  description: Overrides the memory request used in the Plugin registry
-                    deployment. In bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024).
-                    Defaults to 32Mi.
+                  description: Overrides the memory request used in the plugin registry
+                    deployment. Defaults to 16Mi.
                   type: string
                 pluginRegistryPullPolicy:
-                  description: Overrides the image pull policy used in the Plugin
+                  description: Overrides the image pull policy used in the plugin
                     registry deployment. Default value is `Always` for `nightly` or
                     `latest` images, and `IfNotPresent` in other cases.
                   type: string
                 pluginRegistryRoute:
-                  description: Plugin registry route custom settings
+                  description: Plugin registry route custom settings.
                   properties:
                     labels:
                       description: Comma separated list of labels that can be used
-                        to organize and categorize (scope and select) objects.
+                        to organize and categorize objects by scoping and selecting.
                       type: string
                   type: object
                 pluginRegistryUrl:
-                  description: Public URL of the Plugin registry, that serves sample
-                    ready-to-use devfiles. You should set it ONLY if you use an external
-                    devfile registry (see the `externalPluginRegistry` field). By
-                    default this will be automatically calculated by the operator.
+                  description: Public URL of the plugin registry that serves sample
+                    ready-to-use devfiles. Set this ONLY if a use of an external devfile
+                    registry is needed. See the `externalPluginRegistry` field. By
+                    default, this will be automatically calculated by the Operator.
                   type: string
                 proxyPassword:
-                  description: Password of the proxy server Only use when proxy configuration
-                    is required (see also the `proxyURL`, `proxyUser` and `proxySecret`
-                    fields).
+                  description: Password of the proxy server. Only use when proxy configuration
+                    is required. See the `proxyURL`, `proxyUser` and `proxySecret`
+                    fields.
                   type: string
                 proxyPort:
                   description: Port of the proxy server. Only use when configuring
-                    a proxy is required. (see also the `proxyURL` and `nonProxyHosts`
-                    fields).
+                    a proxy is required. See also the `proxyURL` and `nonProxyHosts`
+                    fields.
                   type: string
                 proxySecret:
                   description: The secret that contains `user` and `password` for
-                    a proxy server. If the secret is defined then `proxyUser` and
-                    `proxyPassword` are ignored
+                    a proxy server. When the secret is defined, the `proxyUser` and
+                    `proxyPassword` are ignored.
                   type: string
                 proxyURL:
-                  description: URL (protocol+hostname) of the proxy server. This drives
-                    the appropriate changes in the `JAVA_OPTS` and `https(s)_proxy`
+                  description: URL (protocol+host name) of the proxy server. This
+                    drives the appropriate changes in the `JAVA_OPTS` and `https(s)_proxy`
                     variables in the Che server and workspaces containers. Only use
                     when configuring a proxy is required. Operator respects OpenShift
                     cluster wide proxy configuration and no additional configuration
                     is required, but defining `proxyUrl` in a custom resource leads
                     to overrides the cluster proxy configuration with fields `proxyUrl`,
                     `proxyPort`, `proxyUser` and `proxyPassword` from the custom resource.
-                    (see the doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html)
-                    (see also the `proxyPort` and `nonProxyHosts` fields).
+                    See the doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html).
+                    See also the `proxyPort` and `nonProxyHosts` fields.
                   type: string
                 proxyUser:
                   description: User name of the proxy server. Only use when configuring
-                    a proxy is required (see also the `proxyURL`, `proxyPassword`
-                    and `proxySecret` fields).
+                    a proxy is required. See also the `proxyURL`, `proxyPassword`
+                    and `proxySecret` fields.
                   type: string
                 selfSignedCert:
-                  description: Deprecated. The value of this flag is ignored. Che
-                    operator will automatically detect if router certificate is self-signed.
-                    If so it will be propagated to Che server and some other components.
+                  description: Deprecated. The value of this flag is ignored. The
+                    Che Operator will automatically detect if the router certificate
+                    is self-signed and propagate it to other components, such as the
+                    Che server.
                   type: boolean
                 serverCpuLimit:
-                  description: Overrides the cpu limit used in the Che server deployment
+                  description: Overrides the CPU limit used in the Che server deployment
                     In cores. (500m = .5 cores). Default to 1.
                   type: string
                 serverCpuRequest:
-                  description: Overrides the cpu request used in the Che server deployment
+                  description: Overrides the CPU request used in the Che server deployment
                     In cores. (500m = .5 cores). Default to 100m.
                   type: string
                 serverExposureStrategy:
                   description: Sets the server and workspaces exposure type. Possible
-                    values are "multi-host", "single-host", "default-host". Defaults
-                    to "multi-host" which creates a separate ingress (or route on
-                    OpenShift) for every required endpoint. "single-host" makes Che
-                    exposed on a single hostname with workspaces exposed on subpaths.
-                    Please read the docs to learn about the limitations of this approach.
-                    Also consult the `singleHostExposureType` property to further
-                    configure how the operator and Che server make that happen on
-                    Kubernetes. "default-host" exposes che server on the host of the
-                    cluster. Please read the docs to learn about the limitations of
-                    this approach.
+                    values are `multi-host`, `single-host`, `default-host`. Defaults
+                    to `multi-host`, which creates a separate ingress, or OpenShift
+                    routes, for every required endpoint. `single-host` makes Che exposed
+                    on a single host name with workspaces exposed on subpaths. Read
+                    the docs to learn about the limitations of this approach. Also
+                    consult the `singleHostExposureType` property to further configure
+                    how the Operator and the Che server make that happen on Kubernetes.
+                    `default-host` exposes the Che server on the host of the cluster.
+                    Read the docs to learn about the limitations of this approach.
                   type: string
                 serverMemoryLimit:
                   description: Overrides the memory limit used in the Che server deployment.
-                    In bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024). Defaults
-                    to 1Gi.
+                    Defaults to 1Gi.
                   type: string
                 serverMemoryRequest:
                   description: Overrides the memory request used in the Che server
-                    deployment. In bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024).
-                    Defaults to 512Mi.
+                    deployment. Defaults to 512Mi.
                   type: string
                 serverTrustStoreConfigMapName:
-                  description: Name of the config-map with public certificates to
-                    add to Java trust store of the Che server. This is usually required
-                    when adding the OpenShift OAuth provider which has https endpoint
-                    signed with self-signed cert. So, Che server must be aware of
+                  description: Name of the configMap with public certificates to add
+                    to Java trust store of the Che server. This is often required
+                    when adding the OpenShift OAuth provider, which has HTTPS endpoint
+                    signed with self-signed cert. The Che server must be aware of
                     its CA cert to be able to request it. This is disabled by default.
                   type: string
                 singleHostGatewayConfigMapLabels:
                   additionalProperties:
                     type: string
-                  description: The labels that need to be present (and are put) on
-                    the configmaps representing the gateway configuration.
+                  description: The labels that need to be present in the configMaps
+                    representing the gateway configuration.
                   type: object
                 singleHostGatewayConfigSidecarImage:
                   description: The image used for the gateway sidecar that provides
                     configuration to the gateway. Omit it or leave it empty to use
-                    the defaut container image provided by the operator.
+                    the default container image provided by the Operator.
                   type: string
                 singleHostGatewayImage:
                   description: The image used for the gateway in the single host mode.
-                    Omit it or leave it empty to use the defaut container image provided
-                    by the operator.
+                    Omit it or leave it empty to use the default container image provided
+                    by the Operator.
                   type: string
                 tlsSupport:
-                  description: Deprecated. Instructs the operator to deploy Che in
-                    TLS mode. This is enabled by default. Disabling TLS may cause
-                    malfunction of some Che components.
+                  description: Deprecated. Instructs the Operator to deploy Che in
+                    TLS mode. This is enabled by default. Disabling TLS sometimes
+                    cause malfunction of some Che components.
                   type: boolean
                 useInternalClusterSVCNames:
-                  description: Use internal cluster svc names to communicate between
+                  description: Use internal cluster SVC names to communicate between
                     components to speed up the traffic and avoid proxy issues. The
-                    default value is `true`.
+                    default value is `false`.
                   type: boolean
                 workspaceNamespaceDefault:
-                  description: 'Defines Kubernetes default namespace in which user''s
-                    workspaces are created if user does not override it. It''s possible
-                    to use <username>, <userid> and <workspaceid> placeholders (e.g.:
-                    che-workspace-<username>). In that case, new namespace will be
-                    created for each user (or workspace). Is used by OpenShift infra
-                    as well to specify Project'
+                  description: Defines Kubernetes default namespace in which user's
+                    workspaces are created if user does not override it. It's possible
+                    to use `<username>`,`<userid>` and `<workspaceid>` placeholders,
+                    such as che-workspace-<username>. In that case, a new namespace
+                    will be created for each user or workspace. Is used by OpenShift
+                    infrastructure as well to specify Project.
                   type: string
               type: object
             storage:
@@ -735,24 +727,24 @@
               properties:
                 postgresPVCStorageClassName:
                   description: Storage class for the Persistent Volume Claim dedicated
-                    to the Postgres database. If omitted or left blank, default storage
-                    class is used.
+                    to the PosgreSQL database. When omitted or left blank, a default
+                    storage class is used.
                   type: string
                 preCreateSubPaths:
-                  description: Instructs the Che server to launch a special pod to
-                    pre-create a subpath in the Persistent Volumes. Defaults to `false`,
-                    however it might need to enable it according to the configuration
+                  description: Instructs the Che server to start a special Pod to
+                    pre-create a sub-path in the Persistent Volumes. Defaults to `false`,
+                    however it will need to enable it according to the configuration
                     of your K8S cluster.
                   type: boolean
                 pvcClaimSize:
                   description: Size of the persistent volume claim for workspaces.
-                    Defaults to `1Gi`
+                    Defaults to `1Gi`.
                   type: string
                 pvcJobsImage:
                   description: Overrides the container image used to create sub-paths
                     in the Persistent Volumes. This includes the image tag. Omit it
-                    or leave it empty to use the defaut container image provided by
-                    the operator. See also the `preCreateSubPaths` field.
+                    or leave it empty to use the default container image provided
+                    by the Operator. See also the `preCreateSubPaths` field.
                   type: string
                 pvcStrategy:
                   description: Persistent volume claim strategy for the Che server.
@@ -762,7 +754,7 @@
                   type: string
                 workspacePVCStorageClassName:
                   description: Storage class for the Persistent Volume Claims dedicated
-                    to the Che workspaces. If omitted or left blank, default storage
+                    to the Che workspaces. When omitted or left blank, a default storage
                     class is used.
                   type: string
               type: object
@@ -772,51 +764,51 @@
           properties:
             cheClusterRunning:
               description: Status of a Che installation. Can be `Available`, `Unavailable`,
-                or `Available, Rolling Update in Progress`
+                or `Available, Rolling Update in Progress`.
               type: string
             cheURL:
-              description: Public URL to the Che server
+              description: Public URL to the Che server.
               type: string
             cheVersion:
-              description: Current installed Che version
+              description: Current installed Che version.
               type: string
             dbProvisioned:
-              description: Indicates if or not a Postgres instance has been correctly
-                provisioned
+              description: Indicates that a PosgreSQL instance has been correctly
+                provisioned or not.
               type: boolean
             devfileRegistryURL:
-              description: Public URL to the Devfile registry
+              description: Public URL to the devfile registry.
               type: string
             gitHubOAuthProvisioned:
-              description: Indicates whether an Identity Provider instance (Keycloak
-                / RH SSO) has been configured to integrate with the GitHub OAuth.
+              description: Indicates whether an Identity Provider instance, Keycloak
+                or RH-SSO, has been configured to integrate with the GitHub OAuth.
               type: boolean
             helpLink:
-              description: A URL that can point to some URL where to find help related
+              description: A URL that points to some URL where to find help related
                 to the current Operator status.
               type: string
             keycloakProvisioned:
-              description: Indicates whether an Identity Provider instance (Keycloak
-                / RH SSO) has been provisioned with realm, client and user
+              description: Indicates whether an Identity Provider instance, Keycloak
+                or RH-SSO, has been provisioned with realm, client and user.
               type: boolean
             keycloakURL:
-              description: Public URL to the Identity Provider server (Keycloak /
-                RH SSO).
+              description: Public URL to the Identity Provider server, Keycloak or
+                RH-SSO,.
               type: string
             message:
               description: A human readable message indicating details about why the
-                pod is in this condition.
+                Pod is in this condition.
               type: string
             openShiftoAuthProvisioned:
-              description: Indicates whether an Identity Provider instance (Keycloak
-                / RH SSO) has been configured to integrate with the OpenShift OAuth.
+              description: Indicates whether an Identity Provider instance, Keycloak
+                or RH-SSO, has been configured to integrate with the OpenShift OAuth.
               type: boolean
             pluginRegistryURL:
-              description: Public URL to the Plugin registry
+              description: Public URL to the plugin registry.
               type: string
             reason:
               description: A brief CamelCase message indicating details about why
-                the pod is in this state.
+                the Pod is in this state.
               type: string
           type: object
       type: object
